<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">


    <Style TargetType="{x:Type TextBox}"
           x:Key="ModernTextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border CornerRadius="10"
                            Background="#353340"
                            Width="200"
                            Height="40">
                        <Grid>
                            <Rectangle StrokeThickness= "1"/>
                            <TextBox Margin="1"
                                         Text="{TemplateBinding Text}"
                                         BorderThickness="0"
                                         Background="Transparent"
                                         VerticalAlignment="Center"
                                         Padding="5"
                                         Foreground="#CFCFCF"
                                         x:Name="SearchBox"/>
                            <TextBlock IsHitTestVisible="False"
                                       Text="Поиск"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="10,0,0,0"
                                       FontSize="11"
                                       Foreground="DarkGray"
                                       Grid.Column="1">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text,ElementName=SearchBox}" Value="">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0 4 0 0"/> 
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="red" Margin="2 0 0 0" Text="!" VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" 
                            Padding="0 8"
                            Background="{TemplateBinding Background}" 
                            BorderThickness="0"  
                            CornerRadius="5"
                            SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"/>
                            <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="Visible"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#623ed0"/>
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>
            
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#623ed0"/>
                <Setter Property="Background" Value="#ffffff"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="#dfdfdf"/>
            </MultiTrigger>
        </Style.Triggers>
        
    </Style>
    
    <Style x:Key="TabItemExWithUnderLineStyle"  TargetType="{x:Type TabItem}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#FFACACAC"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot"  SnapsToDevicePixels="True" Background="Transparent">
                        <Border x:Name="_underline" BorderBrush="#d9afd9" BorderThickness="0" Margin="{TemplateBinding Margin}"/>
                        <Grid>
                            <TextBlock x:Name="txt" Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Header}" ToolTip="{TemplateBinding Header}" Foreground="{TemplateBinding Foreground}" TextTrimming="CharacterEllipsis" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>

                            <Setter Property="Foreground" TargetName="txt" Value="#b1f4cf"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="templateRoot" Value="0.56"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TabControl}}}" Value="Top"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Foreground" TargetName="txt" Value="#b1f4cf"/>
                            <Setter Property="BorderThickness" TargetName="_underline" Value="0 0 0 2"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="mainIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush >
                    <GradientStop Color="#9890e3" Offset="0.7"/>
                    <GradientStop Color="#d9afd9" Offset="0.5"/>
                    <GradientStop Color="#b1f4cf" Offset="0.2"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style x:Key="logoIcon" TargetType="TextBlock">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush >
                    <GradientStop Color="#9890e3" Offset="0.7"/>
                    <GradientStop Color="#d9afd9" Offset="0.5"/>
                    <GradientStop Color="#b1f4cf" Offset="0.2"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="menuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9890e3"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#6673b7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#150923"/>
                <Setter Property="Tag" Value="#7071f0"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="1,1" EndPoint="0,0.5">
                            <GradientStop Color="#9890e3" Offset="6"/>
                            <GradientStop Color="Transparent" Offset="0"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#97d9e1">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,2" EndPoint="1,0.1">
                    <GradientStop Color="#9890e3" Offset="0.5"/>
                    <GradientStop Color="#d9afd9" Offset="0.75"/>
                    <GradientStop Color="#b1f4cf" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="gridButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="15"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>


    <Style x:Key="spDecorateL" TargetType="StackPanel">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#9890e3" Offset="0.2"/>
                    <GradientStop Color="#d9afd9" Offset="0.6"/>
                    <GradientStop Color="#b1f4cf" Offset="0.8"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="spDecorateR" TargetType="StackPanel">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#9890e3" Offset="0.7"/>
                    <GradientStop Color="#d9afd9" Offset="0.2"/>
                    <GradientStop Color="#b1f4cf" Offset="0.5"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="UserWindowIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,1.3" EndPoint="1,1">
                    <GradientStop Color="#150923" Offset="0.7"/>
                    <GradientStop Color="#614385" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="menuButtonActive" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#31407b" Offset="0"/>
                    <GradientStop Color="#495385" Offset="3"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#bccaf1"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#7071f0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#97d9e1">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="topMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9eabe2"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Tag" Value="#6673b7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="15">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"/>
                <Setter Property="Foreground" Value="#ffffff"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="paggingButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9eabe2"/>
        <Setter Property="Margin" Value="1 0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 0 1"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"/>
                <Setter Property="Foreground" Value="#ffffff"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="pagingButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

    </Style>

    <Style x:Key="AddButton" TargetType="Button">

        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#517fa4" Offset="0.01"/>
                    <GradientStop Color="#4e4376" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4e4376"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="AddButtonWindow" TargetType="Button">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4e4376"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="gridButtonEdit" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#9890e3" Offset="0.2"/>
                    <GradientStop Color="#4e4376" Offset="0.6"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4e4376"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="gridButtonDelete" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#df89b5" Offset="0.2"/>
                    <GradientStop Color="#4e4376" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#df89b5"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="gridButtonInfo" TargetType="Button">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#b1f4cf" Offset="0.05"/>
                    <GradientStop Color="#517fa4" Offset="0.5"/>
                    <GradientStop Color="#4e4376" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#517fa4"/>
            </Trigger>
        </Style.Triggers>

    </Style>
</ResourceDictionary>